{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifsApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","oldCategories","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","gif","GifsApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MA8BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAiBzC,OACE,sBAAMC,SAXmB,SAACC,GAC1BA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAoBP,GAApB,mBAAmCO,OACjDN,EAAc,MAMhB,SACE,uBACEO,YAAY,8BACZC,MAAOT,EACPU,SAnBsB,SAACP,GAC3BF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAWH,GAF5C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcdM,GAdc,4CAAH,sDCWLO,EATK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC7B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCiBDO,EAlBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAUxC,OAJAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SAChE,IAEIC,EDPmBK,CAAa1B,GAA/BO,EADwB,EACxBA,KAAMa,EADkB,EAClBA,QAEd,OACE,qCACE,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,sCAAb,yBAEZ,qBAAKA,UAAU,iBAAf,SACGT,EAAKE,KAAI,SAACkB,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEIjBiB,EAhBC,WAAO,IAAD,EACgB1C,mBAAS,CAAC,gBAD1B,mBACb2C,EADa,KACD5C,EADC,KAGpB,OACE,sBAAK+B,UAAU,YAAf,UACE,yCACA,cAAC,EAAD,CAAa/B,cAAeA,IAC5B,6BACG4C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCRxB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5bc95bdf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputOnChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleFormOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2 ){\r\n      setCategories((oldCategories) => [inputValue, ...oldCategories]);\r\n      setInputValue(\"\");\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={ handleFormOnSubmit }>\r\n      <input\r\n        placeholder=\"Ingresar categoria a buscar\"\r\n        value={inputValue}\r\n        onChange={handleInputOnChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=etITAyRYs7ISAJA94bibsiUU601JvPdy`;\r\n  const resp = await fetch( url );\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n      return{\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h2>{category}</h2>\r\n      \r\n      {loading && <p className=\"animate__animated animate__flash-2s\">Cargando...</p>}\r\n\r\n      <div className=\"card-container\">\r\n        {data.map((gif) => (\r\n          <GifGridItem key={gif.id} {...gif} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => setState({ data: imgs, loading: false }));\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifsApp = () => {\r\n  const [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Gif App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifsApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifsApp from './GifsApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifsApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}